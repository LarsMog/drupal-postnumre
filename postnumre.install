<?php 
// $Id$

/**
 * @file
 * Scaffolding example module's install and uninstall code.
 */


/**
 * Implementation of hook_install().
 */
function postnumre_install() {
  drupal_install_schema('postnumre');

  $postnumre = _postnumre_load_csv();
  foreach ($postnumre as $number => $data) {
    $record = array(
      'code' => $number,
      'city' => $data['Bynavn'],
      'street' => $data['Gade'],
      'company' => $data['Firma'],
      'country' => $data['Land']
    );
    drupal_write_record('postnumre', $record);
  }
}

/**
 * Implementation of hook_schema().
 */
function postnumre_schema() {
  $schema = array();
  $schema['postnumre'] = array(
    'description' => t('Danish postal codes.'),
    'fields' => array(
      'code' => array(
        'type' => 'char',
        'length' => '4',
        'not null' => TRUE,
        'description' => 'Postal code, stored as text to facilitate partial matching.'
      ),
      'city' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Name of the associated city',
      ),
      'street' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Street name, if applicable',
      ),
      'company' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Company name, if applicable',
      ),
      'country' => array(
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Country (unfortunately) identified by integer)',
      ),
    ),
    'primary key' => array('code'),
    'indexes' => array(
      'city' => array('city'),
      'country' => array('country'),
    ),
  );
  return $schema;
}


/**
 * Implementation of hook_uninstall().
 */
function postnumre_uninstall() {
  drupal_uninstall_schema('postnumre');
}

/**
 * Loads the postal codes from the CSV-file.
 *
 * @return array
 *    A neat nested array of postal codes for the whole Kingdom of Denmark.
 */
function _postnumre_load_csv() {
  $file = fopen(drupal_get_path('module', 'postnumre') . '/postnumre.csv', 'r');

  $headers = fgetcsv($file, 100);
  $rows = array();

  while ($row = fgetcsv($file, 100)) {
    $code = array();
    foreach (range(1, 5) as $index) {
      if (!empty($row[$index])) {
        $code[$headers[$index]] = $row[$index];
      }
    }
    $rows[$row[0]] = $code;
  }

  fclose($file);
  return $rows;
}

